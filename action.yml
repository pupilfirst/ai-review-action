name: 'AI review action'
description: 'Provides AI-generated feedback on student submissions'
author: 'Pupilfirst'
inputs:
  OPEN_AI_MODEL:
    description: 'OpenAI model used to process requests'
    required: false
    default: "gpt-3.5-turbo"
  OPEN_AI_TEMPERATURE:
    description: 'Adjusts the randomness of the model output'
    required: false
    default: 0.1
  SYSTEM_PROMPT:
    description: 'System prompt to be given to the AI'
    required: false
  USER_PROMPT:
    description: 'Used to customize the part of the prompt about the user role'
    required: false
  ROLE_PROMPT:
    description: 'Specifies the role of the AI'
    required: false
  INPUT_DESCRIPTION:
    description: 'Describes the input data format'
    required: false
  OUTPUT_DESCRIPTION:
    description: 'Describes the desired output format for the AI response'
    required: false
  OPENAI_ACCESS_TOKEN:
    description: 'API access token obtained from OpenAI'
    required: true
  OPENAI_ORGANIZATION_ID:
    description: 'Optional ID of your organization in OpenAI'
    required: false
    default: ''
  REVIEW_END_POINT:
    description: 'URL of the endpoint where the reviews are sent'
    required: true
  REVIEW_BOT_USER_TOKEN:
    description: 'Token used for authorization when sending the reviews to the LMS'
    required: true
runs:
  using: 'composite'
  steps:
    - name: 'Checkout'
      uses: 'actions/checkout@v4'

    - name: 'Setup Ruby'
      uses: 'ruby/setup-ruby@v1'
      with:
        ruby-version: '3.1'

    - name: 'Install dependencies'
      run: |
        gem install graphql -v 2.0.27
        gem install ruby-openai dotenv pry graphql-client
      shell: bash

    - name: 'Generate JSON config directly using jq'
      run: |
        jq -n \
          --arg rp "${{ inputs.ROLE_PROMPT }}" \
          --arg up "${{ inputs.USER_PROMPT }}" \
          --arg idesc "${{ inputs.INPUT_DESCRIPTION }}" \
          --arg odesc "${{ inputs.OUTPUT_DESCRIPTION }}" \
          --arg model "${{ inputs.OPEN_AI_MODEL }}" \
          --arg temp "${{ inputs.OPEN_AI_TEMPERATURE }}" \
          '{
            "ROLE_PROMPT": $rp,
            "USER_PROMPT": $up,
            "INPUT_DESCRIPTION": $idesc,
            "OUTPUT_DESCRIPTION": $odesc,
            "OPEN_AI_MODEL": $model,
            "OPEN_AI_TEMPERATURE": $temp
          }' > config.json
      shell: bash


    - name: 'Print the contents of config.json'
      run: cat config.json
      shell: bash

    - name: 'Print the contents of config.json'
      run: cat config.json
      shell: bash

    - name: 'Run the ruby script'
      run: ruby  ${{ github.action_path }}/entrypoint.rb
      shell: bash
